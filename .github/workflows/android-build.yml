name: Android Build

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install Dependencies
        run: npm ci

      - name: Build Ionic App
        run: npm run build

      - name: Capacitor Sync
        run: npx cap sync android

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"
          cache: "gradle"

      - name: Build Android App
        working-directory: android
        run: ./gradlew assembleDebug

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: android/app/build/outputs/apk/debug/app-debug.apk

    #   - name: Setup JDK
    #     uses: actions/setup-java@v4
    #     with:
    #       distribution: 'temurin'
    #       java-version: '17'
    #       cache: 'gradle'

    #   # Keystore Datei wiederherstellen
    #   - name: Decode Keystore
    #     run: |
    #       echo "${{ secrets.ANDROID_KEYSTORE }}" | base64 -d > android/app/my-release-key.jks

    #   # Build Release AAB (Google Play Format)
    #   - name: Build Release Bundle (AAB)
    #     working-directory: android
    #     run: ./gradlew bundleRelease \
    #       -Pandroid.injected.signing.store.file=my-release-key.jks \
    #       -Pandroid.injected.signing.store.password=${{ secrets.ANDROID_KEYSTORE_PASSWORD }} \
    #       -Pandroid.injected.signing.key.alias=${{ secrets.ANDROID_KEY_ALIAS }} \
    #       -Pandroid.injected.signing.key.password=${{ secrets.ANDROID_KEY_PASSWORD }}

    #   # Build Release APK (f√ºr Tests, direkte Installation)
    #   - name: Build Release APK
    #     working-directory: android
    #     run: ./gradlew assembleRelease \
    #       -Pandroid.injected.signing.store.file=my-release-key.jks \
    #       -Pandroid.injected.signing.store.password=${{ secrets.ANDROID_KEYSTORE_PASSWORD }} \
    #       -Pandroid.injected.signing.key.alias=${{ secrets.ANDROID_KEY_ALIAS }} \
    #       -Pandroid.injected.signing.key.password=${{ secrets.ANDROID_KEY_PASSWORD }}

    #   # Artifacts hochladen
    #   - name: Upload Release AAB
    #     uses: actions/upload-artifact@v4
    #     with:
    #       name: app-release-aab
    #       path: android/app/build/outputs/bundle/release/app-release.aab

    #   - name: Upload Release APK
    #     uses: actions/upload-artifact@v4
    #     with:
    #       name: app-release-apk
    #       path: android/app/build/outputs/apk/release/app-release.apk
